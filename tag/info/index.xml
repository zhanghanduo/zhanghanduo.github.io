<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Info | Zhang Handuo's Site</title><link>https://zhanghanduo.github.io/tag/info/</link><atom:link href="https://zhanghanduo.github.io/tag/info/index.xml" rel="self" type="application/rss+xml"/><description>Info</description><generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Mon, 29 Oct 2018 14:46:14 +0800</lastBuildDate><image><url>https://zhanghanduo.github.io/media/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url><title>Info</title><link>https://zhanghanduo.github.io/tag/info/</link></image><item><title>Install new linux environment</title><link>https://zhanghanduo.github.io/post/new_system/</link><pubDate>Mon, 29 Oct 2018 14:46:14 +0800</pubDate><guid>https://zhanghanduo.github.io/post/new_system/</guid><description>&lt;p>When you want to install a brand new Ubuntu 16.04 system. You could try to follow this guidance.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Open &lt;code>Software &amp;amp; Updates&lt;/code> and choose the fastest source.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Update the system:&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo sh -c &amp;#39;echo &amp;#34;deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main&amp;#34; &amp;gt; /etc/apt/sources.list.d/ros-latest.list&amp;#39;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo add-apt-repository ppa:graphics-drivers/ppa
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt-get update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt-get dist-upgrade
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt-get install build-essential git
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>Install Nvidia driver&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo apt-get install nvidia-396 nvidia-settings
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Under cases you have Intel GPU also, please type:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo prime-select nvidia
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="4">
&lt;li>Clone the dotfile repository:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">mkdir softwares &amp;amp;&amp;amp; cd softwares
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">https://github.com/zhanghanduo/dotfiles.git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cd dotfiles
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then follow the &lt;code>readme.md&lt;/code> to install necessary packages and change some settings.
Then reboot to make some settings valid.&lt;/p>
&lt;ol start="5">
&lt;li>Install CUDA:&lt;/li>
&lt;/ol>
&lt;p>Type:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo chmod a+x cuda_xxx_linux_64.run
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo ./cuda_xxx_linux_64.run
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>add the following settings to your .zshrc or .bashrc file and &lt;strong>source&lt;/strong> it:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">export PATH=$PATH:/usr/local/cuda/bin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">export CUDA_HOME=/usr/local/cuda
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="6">
&lt;li>Install CUDNN&lt;/li>
&lt;/ol>
&lt;p>unzip the CUDNN file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"> tar -xzvf cudnn-9.0-linux-x64-v7.tgz
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then copy and change permissions:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"> sudo cp cuda/include/cudnn.h /usr/local/cuda/include
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> sudo cp cuda/lib64/libcudnn* /usr/local/cuda/lib64
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> sudo chmod a+r /usr/local/cuda/include/cudnn.h /usr/local/cuda/lib64/libcudnn*
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="7">
&lt;li>Install ROS Kinetic&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo apt-get install ros-kinetic-desktop-full
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo rosdep init
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rosdep update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt-get install python-rosinstall python-rosinstall-generator python-wstool
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>add the following settings to your .zshrc file and ** source ** it:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">source /opt/ros/kinetic/setup.zsh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">source ~/.zshrc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you use bash instead of zsh you need to run the following commands to set up your shell:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">source /opt/ros/kinetic/setup.bash
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">source ~/.bashrc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="8">
&lt;li>Instal OpenCV 3.x&lt;/li>
&lt;/ol>
&lt;p>8.1 Download
OpenCV source codes can be downloaded in &lt;a href="https://github.com/opencv/opencv/releases" target="_blank" rel="noopener">opencv github&lt;/a>.
OpenCV corresponding contrib can be downloaded in &lt;a href="https://github.com/opencv/opencv_contrib/releases" target="_blank" rel="noopener">opencv_contrib github&lt;/a>.&lt;/p>
&lt;p>8.2 Prerequisites&lt;/p>
&lt;p>Before you install OpenCV&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">mkdir release &amp;amp;&amp;amp; cd release
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt-get build-dep -y opencv
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">(Optional) sudo apt-get install python-dev python-numpy libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>8.3 Cmake&lt;/p>
&lt;p>For normal configure, just type:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D WITH_TBB=ON -D WITH_V4L=ON -D ENABLE_CXX11=ON -D ENABLE_PRECOMPILED_HEADERS=OFF -D CMAKE_CXX_FLAGS=&amp;#39;-std=c++11&amp;#39; ..
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>With contrib, just add: &lt;code>-D OPENCV_EXTRA_MODULES_PATH=/home/hd/softwares/opencv_contrib-3.4.1/modules&lt;/code>.&lt;/p>
&lt;p>With CUDA, just add: &lt;code>-D WITH_CUDA=ON -D ENABLE_FAST_MATH=1 -D CUDA_FAST_MATH=1 -D WITH_CUBLAS=1 -D CUDA_GENERATION=Auto&lt;/code>.&lt;/p>
&lt;p>If you encounter some C++ 11 errors during compiling when you install 3.4 or later, just add: &lt;code>-D CMAKE_CXX_FLAGS='-std=c++11' -D CUDA_NVCC_FLAGS='-std=c++11 --expt-relaxed-constexpr'&lt;/code>&lt;/p>
&lt;p>8.4 Compiling and installing&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">make -j8
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo make install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>8.5 Environment&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">echo &amp;#39;/usr/local/lib&amp;#39; | sudo tee -a /etc/ld.so.conf.d/opencv.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo ldconfig
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">printf &amp;#39;# OpenCV\nPKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/local/lib/pkgconfig\nexport PKG_CONFIG_PATH\n&amp;#39; &amp;gt;&amp;gt; ~/.bashrc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">source ~/.zshrc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pkg-config --modversion opencv //check if opencv is installed and its version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Price and spec of cloud based GPU</title><link>https://zhanghanduo.github.io/post/gpu_cloud/</link><pubDate>Mon, 29 Oct 2018 14:17:43 +0800</pubDate><guid>https://zhanghanduo.github.io/post/gpu_cloud/</guid><description>&lt;p>I summarized several cloud based GPU services:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Name of services&lt;/th>
&lt;th>Specification&lt;/th>
&lt;th style="text-align:center">Price (US$)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>AWS P2 instance&lt;/td>
&lt;td>p2.xLarge&lt;/td>
&lt;td style="text-align:center">0.9 / hour&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Azure NC6&lt;/td>
&lt;td>1xK80&lt;/td>
&lt;td style="text-align:center">0.9 / hour&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://lambdalabs.com/service/gpu-cloud" target="_blank" rel="noopener">Lambda GPU cloud&lt;/a>&lt;/td>
&lt;td>8x AWS P2 instances&lt;/td>
&lt;td style="text-align:center">0.90 / GPU/ hour&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://ts.ntu.edu.sg/sites/hpc/Charges/Home.aspx" target="_blank" rel="noopener">NTU HPCC&lt;/a>&lt;/td>
&lt;td>2 units of 1-P100 is scheduled to be ready by End of October&lt;/td>
&lt;td style="text-align:center">0.78 / core/ hour&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item></channel></rss>